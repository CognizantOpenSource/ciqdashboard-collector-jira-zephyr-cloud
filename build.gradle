plugins {
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java-library'
    id "org.sonarqube" version "3.3"
}

bootJar {
    exclude('application.yml')
    exclude('application.properties')
}

sonarqube {
  properties {
    property "sonar.qualitygate.wait", true
  }
}
group = 'com.cognizant.ciqdashboard.data.collector'
version = '2.0.0'
description = 'jirazephyr'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()

    flatDir {
        dirs 'src/lib'
    }
}

ext {
    set('springCloudVersion', "2021.0.4")
}

dependencies {

    implementation name: 'zfj-cloud-rest-client-3.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation ('org.springframework.cloud:spring-cloud-starter-openfeign:3.1.8'){
        exclude group: 'org.bouncycastle', module: 'bcpkix-jdk15on'
    }
    implementation 'org.yaml:snakeyaml:2.0'
    implementation 'commons-fileupload:commons-fileupload:1.5'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.3'

    api 'io.github.openfeign:feign-jackson:12.2'
    api 'io.github.openfeign:feign-okhttp:12.2'

    api group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.5'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
